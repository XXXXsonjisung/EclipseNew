package edu.kh.array2.ex;

import java.util.Arrays;

public class Array2Example {

	/* 2차원 배열
	 * 
	 * - 자료형이 같은 1차원 배열을 묶음으로 다루는 것
	 * -> 행, 열 개념 추가
	 * 
	 * 
	 */
	
	public void ex1() {
		
		// 2차원 배열 선언
		
		int[][] arr;
		// int 2차원 배열을 참조하는 참조변수 선언
		// 참조형 변수 == 참조 변수 == 레퍼런스 변수 == 레퍼런스
		
		// 2차원 배열 할당
		// -> new 자료형[행크기][열크기]
		
		arr = new int[2][3];
		// heap 영역에 int 2차원 배열 2행 3열 공간을 할당
		
		// 2차원 배열 초기화
		// 1) 행, 열 인덱스를 이용해서 직접 초기화
		/*arr[0][0] = 10;
		arr[0][1] = 20;
		arr[0][2] = 30;
		
		arr[1][1] = 40;
		arr[1][2] = 50;
		arr[1][3] = 60;
		*/
		
		// 2) 2중 for문을 이용한 초기화
		
		int num = 10; // 배열 요소 초기화에 사용할 변수
		
		// * 배열 길이
		// -> 배열명.length;는 변수가 직접참조하고 있는 배열의 길이를 반환
		
		System.out.println(arr.length); // 행길이
		// arr이 참조하고 있는 2차원 배열의 행의 길이
		System.out.println(arr[0].length); // 열길이
		// arr[0] 행이 참조하고 있는 1차원 배열의 깊이
		System.out.println(arr[1].length); // 열길이
		// arr[1] 행이 참조하고 있는 1차원 배열의 깊이
		
		for(int row = 0; row < arr.length; row++) { // 행 반복(0, 1)
			
			for(int col = 0; col < arr[row].length; col++) {
				arr[row][col] = num;
				num += 10;
			}
		}
		// Arrays.toString(배열명) : 참조하고 있는 1차원 배열값을 문자열로 반환
		System.out.println("toString() : " + Arrays.toString(arr));
		
		//Arrays.deepToString(배열명)
		// - 참조하고 있는 배열의 데이터가 나오는 부분까지 파고 들어가서
		// 모든값을 문자열로 반환
		System.out.println("deepToString() : " + Arrays.deepToString(arr));
		
	
		
	}
	
	public void ex1() {
		
	}
	
	public void ex2() {
		
		//2차원 배열 선언과 동시에 초기화
		// 3행 3열짜리 정수형 2차원 배열 선언과 동시에
		// 1 ~ 9까지 초기화
		
		int[][] arr = { {1,2,3} , {4,5,6,} , {7,8,9} };
		
		// 행 별로 합 출력
		
		for(int row = 0; row < arr.length; row++) { // 행 반복
			int sum = 0;
			
			for(int col = 0; col < arr[row].length; col++) { // 열 반복
				
				sum += arr[row][col];
					//		0	 0		-> 1
					//		0	 1		-> 2
					//		0	 2		-> 3
				// ----------------------------
					//		1	 0		-> 4
					//		1	 1		-> 5
					//		1	 2		-> 6
				// ----------------------------
					//		2	 0		-> 7
					//		2	 1		-> 8
					//		2	 2		-> 9
			}
			
			System.out.printf("%d행의 합 : %d\n", row, sum);
		}
		System.out.println("-----------------------------");
		
		// 열 별로 합출력
		
		for(int row1 = 0; row1 < arr.length; row1++) {
			int sum = 0;
			
			for(int col1 = 0; col1 < arr[row1].length; col1++) {
				
				sum += arr[row1][col1];
				System.out.printf("%d열의 합 : %d\n", col1, sum);
				}
			
			
			
		}
		
	}
	
	
	
}
